{"version":3,"sources":["components/common/Formik/FormElements/Input.js","components/common/Formik/FormElements/Textarea.js","components/common/Formik/FormikController.js","components/Users/Users.module.css","api/api.js","components/Navbar/Navbar.module.css","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","assets/images/avatar_default.webp","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/redux-store.js","App.js","reportWebVitals.js","index.js","assets/images/preloader.svg","components/common/Preloader/Preloader.js","components/common/Formik/Form/FieldElement.js","components/Header/Header.module.css","components/common/Formik/Form/FieldElement.module.css","components/common/Paginator/Paginator.module.css","redux/profile-reducer.js","hoc/withAuthRedirect.js","redux/dialogs-reducer.js"],"names":["Input","props","text","rest","htmlFor","name","Textarea","FormikController","fieldType","module","exports","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userID","post","unfollow","delete","getProfile","userId","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Navbar","className","classes","nav","item","active","to","activeClassName","News","Music","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","totalUsersCount","isFetching","followingInProgress","followSuccess","userid","type","unfollowSuccess","setCurrentPage","setTotalUsersCount","totalCount","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","state","action","followed","filter","id","Paginator","pagesCount","Math","ceil","totalItemsCount","pages","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","i","push","paginator","onClick","page","cn","selectedPage","pageNumber","onPageChanged","User","user","src","photos","small","userPhoto","disabled","Users","usersPage","getPageSize","createSelector","getUsersTotalCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersAPIComponent","requestUsers","this","Preloader","React","Component","compose","withAuthRedirect","connect","bind","Header","header","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","validationSchemaLoginForm","Yup","shape","min","required","LoginForm","initialValues","validationSchema","onSubmit","values","setSubmitting","setStatus","errors","touched","isValid","dirty","styles","summaryError","FieldElement","placeholder","messages","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ProfileContainer","lazy","App","initializeApp","role","fallback","path","component","render","UsersContainer","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","preloader","style","width","FieldElementComponent","field","form","errorExist","meta","error","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","postsData","message","likesCount","newPostText","profile","addPostActionCreator","newPostBody","getUserProfile","newPost","stateCopy","p","postId","mapStateToPropsForRedirect","RedirectComponent","SEND_MESSAGE","dialogs","newMessageText","sendMessageCreator","newMessageBody","newMessage"],"mappings":"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","file":"static/js/main.e76eb836.chunk.js","sourcesContent":["const Input = (props) => {\r\n  const { text, ...rest } = props;\r\n  return (\r\n    <div>\r\n      <input {...rest} />\r\n      {text && <label htmlFor={props.name}> {text} </label>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","const Textarea = (props) => {\r\n    // const { className, ...rest } = props;\r\n  return (\r\n    <div>\r\n        {/* {console.log(className)} */}\r\n      <textarea {...props} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Textarea;\r\n","import Checkbox from \"./FormElements/Checkbox\";\r\nimport Input from \"./FormElements/Input\";\r\nimport Textarea from \"./FormElements/Textarea\";\r\n\r\nconst FormikController = (props) => {\r\n  const { fieldType, ...rest } = props;\r\n  switch (fieldType) {\r\n    case \"input\":\r\n      return <Input {...rest} />;\r\n    case \"textarea\":\r\n      return <Textarea {...rest} />;\r\n\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport default FormikController;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__2DSyX\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n  headers: {\r\n    \"API-KEY\": \"5b4f131a-2bd8-47e2-a021-b9e66418d19d\",\r\n  },\r\n});\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return instance\r\n      .get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n  follow(userID) {\r\n    return instance.post(`follow/${userID}`);\r\n  },\r\n  unfollow(userID) {\r\n    return instance.delete(`follow/${userID}`);\r\n  },\r\n  getProfile(userId) {\r\n    console.warn('Obsolete method. Please use ProfileAPI obkect');\r\n    // return instance.get(`profile/${userId}`);\r\n    return profileAPI.getProfile(userId);\r\n  },\r\n};\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId) {\r\n    return instance.get(`profile/${userId}`);\r\n  },\r\n  \r\n  getStatus(userId) {\r\n    return instance.get(`profile/status/${userId}`);\r\n  },\r\n  \r\n  updateStatus(status) {\r\n    return instance.put(`profile/status`, {status: status});\r\n  },\r\n\r\n};\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`);\r\n  },\r\n  \r\n  login(email, password, rememberMe = false) {\r\n    return instance.post(`auth/login`, {email, password, rememberMe});\r\n  },\r\n  \r\n  logout() {\r\n    return instance.delete(`auth/login`);\r\n  },\r\n};\r\n\r\nexport const getUsers = (currentPage = 1, pageSize = 10) => {\r\n  return instance\r\n    .get(`users?page=${currentPage}&count=${pageSize}`)\r\n    .then((response) => {\r\n      return response.data;\r\n    });\r\n};\r\n\r\n// export const getUsers = (currentPage = 1, pageSize = 10) => {\r\n//   return instance.get(baseUrl + `follow/${u.id}`).then((response) => {\r\n//     return response.data;\r\n//   });\r\n// };\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1-HGE\",\"item\":\"Navbar_item__1aG3h\",\"active\":\"Navbar_active__UlbHK\"};","import classes from \"./Navbar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={classes.nav}>\r\n      <div className={`${classes.item} ${classes.active}`}>\r\n        <NavLink to=\"/profile\" activeClassName={classes.active}>\r\n          Profile\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/dialogs\" activeClassName={classes.active}>\r\n          Messgaes\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/users\" activeClassName={classes.active}>\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/news\" activeClassName={classes.active}>\r\n          News\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/music\" activeClassName={classes.active}>\r\n          Music\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/settings\" activeClassName={classes.active}>\r\n          Settings\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import classes from \"./News.module.css\";\r\n\r\nconst News = () => {\r\n  return <div>News</div>;\r\n};\r\n\r\nexport default News;\r\n","import classes from \"./Music.module.css\";\r\n\r\nconst Music = () => {\r\n  return <div>Music</div>;\r\n};\r\n\r\nexport default Music;\r\n","import classes from \"./Settings.module.css\";\r\n\r\nconst Settings = () => {\r\n  return <div>Settings</div>;\r\n};\r\n\r\nexport default Settings;\r\n","export let updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n  return items.map((u) => {\r\n    if (u[objPropName] === itemId) {\r\n      return { ...u, ...newObjProps };\r\n    }\r\n    return u;\r\n  });\r\n};\r\n","import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/object-helpers\";\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET-USERS\";\r\nconst SET_CURRENT_PAGE = \"SET-CURRENT-PAGE\";\r\nconst SET_TOTAL_COUNT = \"SET-TOTAL-COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE-IS-FOLLOWING-PROGRESS\";\r\n\r\nlet initialState = {\r\n  users: [\r\n    //     {\r\n    //       id: 1,\r\n    //       photoUrl:\r\n    //         \"https://cdn.pixabay.com/photo/2018/08/28/12/41/avatar-3637425_960_720.png\",\r\n    //       followed: true,\r\n    //       fullName: \"Artur\",\r\n    //       status: \"My status\",\r\n    //       location: { country: \"Latvia\", city: \"Jurmala\" },\r\n    //     },\r\n    //     {\r\n    //       id: 2,\r\n    //       photoUrl:\r\n    //         \"https://cdn.pixabay.com/photo/2018/08/28/12/41/avatar-3637425_960_720.png\",\r\n    //       followed: false,\r\n    //       fullName: \"Vadim\",\r\n    //       status: \"He's status\",\r\n    //       location: { country: \"Latvia\", city: \"Kemeri\" },\r\n    //     },\r\n  ],\r\n  pageSize: 20,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: true,\r\n  followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userid, \"id\", {\r\n          followed: true,\r\n        }),\r\n        // users: state.users.map((u) => {\r\n        //   if (u.id === action.userid) {\r\n        //     return { ...u, followed: true };\r\n        //   }\r\n        //   return u;\r\n        // }),\r\n      };\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userid, \"id\", {\r\n          followed: false,\r\n        }),\r\n        // users: state.users.map((u) => {\r\n        //   if (u.id === action.userid) {\r\n        //     return { ...u, followed: false };\r\n        //   }\r\n        //   return u;\r\n        // }),\r\n      };\r\n    case SET_USERS: {\r\n      return { ...state, users: action.users };\r\n    }\r\n\r\n    case SET_CURRENT_PAGE: {\r\n      return { ...state, currentPage: action.currentPage };\r\n    }\r\n\r\n    case SET_TOTAL_COUNT: {\r\n      return { ...state, totalUsersCount: action.totalCount };\r\n    }\r\n    case TOGGLE_IS_FETCHING: {\r\n      return { ...state, isFetching: action.isFetching };\r\n    }\r\n\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userid]\r\n          : [...state.followingInProgress.filter((id) => id != action.userid)],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const followSuccess = (userid) => ({\r\n  type: FOLLOW,\r\n  userid,\r\n});\r\n\r\nexport const unfollowSuccess = (userid) => ({\r\n  type: UNFOLLOW,\r\n  userid,\r\n});\r\n\r\nexport const setUsers = (users) => ({\r\n  type: SET_USERS,\r\n  users,\r\n});\r\n\r\nexport const setCurrentPage = (currentPage) => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage,\r\n});\r\n\r\nexport const setTotalUsersCount = (totalCount) => ({\r\n  type: SET_TOTAL_COUNT,\r\n  totalCount,\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching,\r\n});\r\n\r\nexport const toggleFollowingProgress = (isFetching, userid) => ({\r\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n  isFetching,\r\n});\r\n\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(currentPage));\r\n    let data = await usersAPI.getUsers(currentPage, pageSize);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n  };\r\n};\r\n\r\nconst followUnfollowFlow = async (\r\n  dispatch,\r\n  userID,\r\n  apiMethod,\r\n  actionCreator\r\n) => {\r\n  dispatch(toggleFollowingProgress(true, userID));\r\n  let response = await apiMethod(userID);\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(actionCreator(userID));\r\n  }\r\n  dispatch(toggleFollowingProgress(false, userID));\r\n};\r\n\r\nexport const follow = (userID) => {\r\n  return async (dispatch) => {\r\n    let apiMethod = usersAPI.follow.bind(usersAPI);\r\n    let actionCreator = followSuccess;\r\n\r\n    followUnfollowFlow(\r\n      dispatch,\r\n      userID,\r\n      usersAPI.follow.bind(usersAPI),\r\n      followSuccess\r\n    );\r\n\r\n    // dispatch(toggleFollowingProgress(true, userID));\r\n    // let response = await apiMethod.follow(userID);\r\n\r\n    // if (response.data.resultCode === 0) {\r\n    //   dispatch(actionCreator(userID));\r\n    // }\r\n    // dispatch(toggleFollowingProgress(false, userID));\r\n  };\r\n};\r\n\r\nexport const unfollow = (userID) => {\r\n  return async (dispatch) => {\r\n    let apiMethod = usersAPI.unfollow.bind(usersAPI);\r\n    let actionCreator = unfollowSuccess;\r\n\r\n    followUnfollowFlow(\r\n      dispatch,\r\n      userID,\r\n      usersAPI.unfollow.bind(usersAPI),\r\n      unfollowSuccess\r\n    );\r\n\r\n    // dispatch(toggleFollowingProgress(true, userID));\r\n    // let response = await apiMethod.unfollow(userID);\r\n\r\n    // if (response.data.resultCode === 0) {\r\n    //   dispatch(actionCreator(userID));\r\n    // }\r\n    // dispatch(toggleFollowingProgress(false, userID));\r\n  };\r\n};\r\n\r\nexport default usersReducer;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport classes from \"../Paginator/Paginator.module.css\";\r\nimport cn from \"classnames\";\r\nconst Paginator = (props) => {\r\n  let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\r\n  let pages = [];\r\n  let portionSize = 10;\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n  return (\r\n    <div className={classes.paginator}>\r\n      {portionNumber > 1 && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber - 1);\r\n          }}\r\n        >\r\n          PREV\r\n        </button>\r\n      )}\r\n      {pages\r\n        .filter(\r\n          (page) =>\r\n            page >= leftPortionPageNumber && page <= rightPortionPageNumber\r\n        )\r\n        .map((page) => {\r\n          return (\r\n            <span\r\n              className={cn(\r\n                {\r\n                  [classes.selectedPage]: props.currentPage === page,\r\n                },\r\n                classes.pageNumber\r\n              )}\r\n              onClick={() => {\r\n                props.onPageChanged(page);\r\n              }}\r\n            >\r\n              {page}\r\n            </span>\r\n          );\r\n        })}\r\n      {portionCount > portionNumber && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber + 1);\r\n          }}\r\n        >\r\n          NEXT\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n","export default __webpack_public_path__ + \"static/media/avatar_default.2543daec.webp\";","import React from \"react\";\r\nimport classes from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/avatar_default.webp\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst User = ({ user, followingInProgress, unfollow, follow }) => {\r\n  let u = user;\r\n  return (\r\n    <div>\r\n      <span>\r\n        <div>\r\n          <NavLink to={\"/profile/\" + u.id}>\r\n            <img\r\n              src={u.photos.small != null ? u.photos.small : userPhoto}\r\n              className={classes.userPhoto}\r\n            />\r\n          </NavLink>\r\n        </div>\r\n        <div>\r\n          {u.followed ? (\r\n            <button\r\n              disabled={followingInProgress}\r\n              onClick={() => {\r\n                unfollow(u.id);\r\n              }}\r\n            >\r\n              Unfollow\r\n            </button>\r\n          ) : (\r\n            <button\r\n              disabled={followingInProgress}\r\n              onClick={() => {\r\n                follow(u.id);\r\n              }}\r\n            >\r\n              Follow\r\n            </button>\r\n          )}\r\n        </div>\r\n      </span>\r\n      <span>\r\n        <span>\r\n          <div>{u.name}</div>\r\n          <div>{u.status}</div>\r\n        </span>\r\n        <span>\r\n          <div>{\"u.location.country\"}</div>\r\n          <div>{\"u.location.city\"}</div>\r\n        </span>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nconst Users = (props) => {\r\n  // let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n  // let pages = [];\r\n\r\n  // for (let i = 1; i <= pagesCount; i++) {\r\n  //   pages.push(i);\r\n  // }\r\n  return (\r\n    <div>\r\n      {/* <div>\r\n        {pages.map((page) => {\r\n          return (\r\n            <span\r\n              className={props.currentPage === page && classes.selectedPage}\r\n              onClick={() => {\r\n                props.onPageChanged(page);\r\n              }}\r\n            >\r\n              {page}\r\n            </span>\r\n          );\r\n        })}\r\n      </div> */}\r\n      <Paginator\r\n        currentPage={props.currentPage}\r\n        onPageChanged={props.onPageChanged}\r\n        totalItemsCount={props.totalUsersCount}\r\n        pageSize={props.pageSize}\r\n      />\r\n      <div>\r\n        {props.users.map((u) => (\r\n          <User\r\n            user={u}\r\n            key={u.id}\r\n            followingInProgress={props.followingInProgress}\r\n            unfollow={props.unfollow}\r\n            follow={props.follow}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getUsers = (state) => {\r\n  return state.usersPage.users;\r\n};\r\n\r\nexport const getUsersSelector = () => {\r\n  return getUsers().filter((u) => true);\r\n};\r\n\r\nexport const getUsersSuperSelector = createSelector(getUsers, (users) => {\r\n  debugger;\r\n  return users.filter((u) => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getUsersTotalCount = (state) => {\r\n  return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress;\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n  follow,\r\n  setCurrentPage,\r\n  setTotalUsersCount,\r\n  unfollow,\r\n  toggleFollowingProgress,\r\n  requestUsers,\r\n} from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport * as axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport { usersAPI } from \"../../api/api\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  getUsers,\r\n  getCurrentPage,\r\n  getFollowingInProgress,\r\n  getIsFetching,\r\n  getPageSize,\r\n  getUsersTotalCount,\r\n  getUsersSuperSelector,\r\n} from \"../../redux/users-selectors\";\r\n// import UsersAPIComponent from \"./UsersC\";\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n  componentDidMount() {\r\n    const { currentPage, pageSize } = this.props;\r\n    this.props.requestUsers(currentPage, pageSize);\r\n    // this.props.toggleIsFetching(true);\r\n\r\n    // usersAPI\r\n    //   .getUsers(this.props.currentPage, this.props.pageSize)\r\n    //   .then((data) => {\r\n    //     this.props.toggleIsFetching(false);\r\n    //     this.props.setUsers(data.items);\r\n    //     this.props.setTotalUsersCount(data.totalCount);\r\n    //   });\r\n  }\r\n\r\n  onPageChanged = (pageNumber) => {\r\n    const {pageSize} = this.props;\r\n    this.props.requestUsers(pageNumber, pageSize);\r\n    // this.props.setCurrentPage(pageNumber);\r\n    // this.props.toggleIsFetching(true);\r\n    // usersAPI.getUsers(pageNumber, this.props.pageSize).then((data) => {\r\n    //   this.props.toggleIsFetching(false);\r\n    //   this.props.setUsers(data.items);\r\n    // });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n        <Users\r\n          totalUsersCount={this.props.totalUsersCount}\r\n          pageSize={this.props.pageSize}\r\n          currentPage={this.props.currentPage}\r\n          onPageChanged={this.onPageChanged}\r\n          users={this.props.users}\r\n          follow={this.props.follow}\r\n          unfollow={this.props.unfollow}\r\n          toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// let mapStateToProps = (state) => {\r\n//   return {\r\n//     users: state.usersPage.users,\r\n//     pageSize: state.usersPage.pageSize,\r\n//     totalUsersCount: state.usersPage.totalUsersCount,\r\n//     currentPage: state.usersPage.currentPage,\r\n//     isFetching: state.usersPage.isFetching,\r\n//     followingInProgress: state.usersPage.followingInProgress,\r\n//   };\r\n// };\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getUsersTotalCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n  };\r\n};\r\n\r\nlet withRedirect = withAuthRedirect(UsersAPIComponent);\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     follow: (userId) => {\r\n//       dispatch(followActionCreator(userId));\r\n//     },\r\n\r\n//     unfollow: (userId) => {\r\n//       dispatch(unfollowActionCreator(userId));\r\n//     },\r\n//     setUsers: (users) => {\r\n//       dispatch(setUsersActionCreator(users));\r\n//     },\r\n\r\n//     setCurrentPage: (pageNumber) => {\r\n//       dispatch(setCurrentPageActionCreator(pageNumber));\r\n//     },\r\n\r\n//     setTotalUsersCount: (totalCount) => {\r\n//       dispatch(setTotalUsersCountActionCreator(totalCount));\r\n//     },\r\n//     toggleIsFetching: (isFetching) => {\r\n//       dispatch(toggleIsFetchingActionCreator(isFetching));\r\n//     },\r\n//   };\r\n// };\r\n\r\n// const UsersContainer = connect(mapStateToProps, {\r\n//   follow,\r\n//   unfollow,\r\n//   setCurrentPage,\r\n//   setTotalUsersCount,\r\n//   getUsers,\r\n// })(withRedirect);\r\n\r\n// follow,\r\n// unfollow,\r\n// setUsers,\r\n// setCurrentPage,\r\n// setTotalUsersCount,\r\n// toggleIsFetching,\r\n// toggleFollowingProgress,\r\n// getUsers: getUsersThunkCreator,\r\n\r\n// export default UsersContainer;\r\n\r\nexport default compose(\r\n  // withAuthRedirect,\r\n  connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    requestUsers,\r\n  })\r\n)(UsersAPIComponent);\r\n","import { NavLink } from \"react-router-dom\";\r\nimport classes from \"./Header.module.css\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <img src=\"https://logos-world.net/wp-content/uploads/2020/04/Huawei-Logo.png\" />\r\n      <div className={classes.loginBlock}>\r\n        {props.isAuth}\r\n        {props.isAuth ? (\r\n          <div>{props.login} - <button onClick={()=>{props.logout()}}>Log out</button></div>\r\n        ) : (\r\n          <NavLink to={\"/login\"}>Login</NavLink>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { authAPI } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = \"samurai-network/auth/SET-USER-DATA\";\r\n\r\nlet initialState = {\r\n  id: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n  //isFetching: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({\r\n  type: SET_USER_DATA,\r\n  payload: { id, email, login, isAuth },\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n  let response = await authAPI.me();\r\n  if (response.data.resultCode === 0) {\r\n    let { id, login, email } = response.data.data;\r\n    dispatch(setAuthUserData(id, email, login, true));\r\n  }\r\n};\r\n\r\nexport const login =\r\n  (email, password, rememberMe, setStatus) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(getAuthUserData());\r\n    } else {\r\n      setStatus(response.data.messages);\r\n    }\r\n  };\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  let response = await authAPI.logout();\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getAuthUserData(null, null, null, false));\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\nimport classes from \"./Header.module.css\";\r\nimport { getAuthUserData, logout } from \"../../redux/auth-reducer\";\r\nimport { authAPI } from \"../../api/api\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  // componentDidMount() {\r\n    // this.props.getAuthUserData();\r\n    // authAPI.me().then((response) => {\r\n    //   if (response.data.resultCode === 0) {\r\n    //     let { id, login, email } = response.data.data;\r\n    //     this.props.setAuthUserData(id, email, login);\r\n    //   }\r\n    // });\r\n\r\n    // axios\r\n    //   .get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {\r\n    //     withCredentials: true,\r\n    //   })\r\n    //   .then((response) => {\r\n    //     if (response.data.resultCode === 0) {\r\n    //       let { id, login, email } = response.data.data;\r\n    //       this.props.setAuthUserData(id, email, login);\r\n    //     }\r\n    //   });\r\n  // }\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout })(\r\n  HeaderContainer\r\n);\r\n","import React from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport FieldElement from \"../common/Formik/Form/FieldElement\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport styles from \"../common/Formik/Form/FieldElement.module.css\";\r\n\r\nconst validateLoginForm = (values) => {\r\n  const errors = {};\r\n\r\n  if (!values.email) {\r\n    errors.email = \"Required 1\";\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\r\n    errors.email = \"Invalid email address\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst validationSchemaLoginForm = Yup.object().shape({\r\n  password: Yup.string()\r\n    .min(2, \"Must be longer than 2 characters\")\r\n    .required(\"Required 2\"),\r\n  email: Yup.string().email(\"Invalid email address\").required(\"Required email\"),\r\n});\r\n\r\nconst LoginForm = ({ login }) => {\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          email: \"\",\r\n          password: \"\",\r\n          rememberMe: false,\r\n        }}\r\n        // validate={validateLoginForm}\r\n        validationSchema={validationSchemaLoginForm}\r\n        onSubmit={(values, { setSubmitting, setStatus }) => {\r\n          login(values.email, values.password, values.rememberMe, setStatus);\r\n          setSubmitting(false);\r\n        }}\r\n      >\r\n        {({ errors, touched, isValid, dirty, status }) => (\r\n          <Form>\r\n            {status && <span className={styles.summaryError}>{status}</span>}\r\n              <FieldElement\r\n                fieldType=\"input\"\r\n                type={\"email\"}\r\n                name={\"email\"}\r\n                placeholder={\"e-mail\"}\r\n              />\r\n\r\n\r\n              <FieldElement\r\n                fieldType=\"input\"\r\n                name={\"password\"}\r\n                type={\"password\"}\r\n                placeholder={\"password\"}\r\n              />\r\n\r\n\r\n              <FieldElement\r\n                fieldType=\"input\"\r\n                name={\"rememberMe\"}\r\n                type=\"checkbox\"\r\n                id=\"rememberMe\"\r\n                text=\"remember me\"\r\n              />\r\n\r\n              {/* <label htmlFor={\"rememberMe\"}> remember me </label> */}\r\n\r\n\r\n            <button type={\"submit\"}>Login</button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Login = (props) => {\r\n  if (props.isAuth) {\r\n    return <Redirect to=\"/profile\" />;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <LoginForm {...props} />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProsp = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProsp, { login })(Login);\r\n","import { authAPI } from \"../api/api\";\r\nimport { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"SET-SUCCESS\";\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializedSuccess = () => ({\r\n  type: INITIALIZED_SUCCESS,\r\n});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n  Promise.all([promise]).then(() => {\r\n    dispatch(initializedSuccess());\r\n  });\r\n};\r\n\r\nexport default appReducer;\r\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport appReducer from \"./app-reducer\";\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, /* preloadedState, */ composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n","import Navbar from \"./components/Navbar/Navbar\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport { BrowserRouter, Route, withRouter } from \"react-router-dom\";\nimport \"./App.css\";\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport { initializeApp } from \"./redux/app-reducer\";\nimport React, { Component, Suspense } from \"react\";\nimport { connect, Provider } from \"react-redux\";\nimport { compose } from \"redux\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport { withSuspense } from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() =>\n  import(\"./components/Dialogs/DialogsContainer\")\n);\nconst ProfileContainer = React.lazy(() =>\n  import(\"./components/Profile/ProfileContainer\")\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />;\n    }\n    return (\n      <div role={\"main\"} className=\"app-wrapper\">\n        <HeaderContainer />\n        <Navbar />\n        <div className=\"app-wrapper-content\">\n          <Suspense fallback={<Preloader />}>\n            <Route path=\"/news\" component={News} />\n            <Route path=\"/music\" component={Music} />\n            <Route path=\"/settings\" component={Settings} />\n\n            <Route\n              path=\"/dialogs\"\n              render={() => {\n                <DialogsContainer />;\n              }}\n            />\n            <Route\n              path=\"/profile/:userId?\"\n              render={() => <ProfileContainer />}\n            />\n            <Route path=\"/users\" render={() => <UsersContainer />} />\n            <Route path=\"/login\" render={() => <Login />} />\n          </Suspense>\n        </div>\n      </div>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  initialized: state.app.initialized,\n});\n\nlet AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App);\n\nconst SamuraiJSApp = (props) => {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </BrowserRouter>\n  );\n};\n\nexport default SamuraiJSApp;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport store from \"./redux/redux-store\";\nimport { Provider } from \"react-redux\";\nimport SamuraiJSApp from \"./App\";\n\nReactDOM.render(\n  // <BrowserRouter>\n  //   <Provider store={store}>\n  //     <App />\n  //   </Provider>\n  // </BrowserRouter>\n  <SamuraiJSApp />,\n  document.getElementById(\"root\")\n);\n\n// rerenderEntireTree();\n// store.subscribe(() => {\n//   let state = store.getState();\n//   rerenderEntireTree(state);\n// });\n\n// ReactDOM.render(\n//     <App state={state} posts={postData} dialogs={dialogs} messages={messages} />,\n//     document.getElementById(\"root\")\n//   );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/preloader.793c2c3c.svg\";","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\nlet Preloader = (props) => {\r\n  return <img src={preloader} style={{ width: \"100px\" }} />;\r\n};\r\n\r\nexport default Preloader;\r\n","import { Field } from \"formik\";\r\nimport FormikController from \"../FormikController\";\r\nimport styles from \"../Form/FieldElement.module.css\";\r\nconst FieldElement = (props) => {\r\n  const { name, ...rest } = props;\r\n  return (\r\n    <div>\r\n      <Field name={name} component={FieldElementComponent} data={rest} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FieldElementComponent = ({\r\n  data,\r\n  field,\r\n  form: { touched, errors },\r\n  meta,\r\n}) => {\r\n  const { fieldType, ...rest } = data;\r\n  const errorExist = touched[field.name] && errors[field.name];\r\n  return (\r\n    <div className={errorExist ? styles.error : \"\"}>\r\n      <FormikController {...field} {...data} />\r\n      {errorExist && <span>{errors[field.name]}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FieldElement;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2uXJa\",\"loginBlock\":\"Header_loginBlock__14bIf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FieldElement_error__ZX-T8\",\"summaryError\":\"FieldElement_summaryError__2CeJJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2DIl0\",\"pageNumber\":\"Paginator_pageNumber__2VE9t\",\"selectedPage\":\"Paginator_selectedPage__EsPZO\"};","import { profileAPI, usersAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET-USER-PROFILE\";\r\nconst SET_STATUS = \"SET-STATUS\";\r\nconst DELETE_POST = \"DELETE-POST\";\r\n\r\nlet initialState = {\r\n  postsData: [\r\n    { id: 1, message: \"ETA NE RABOTAETsdsd?\", likesCount: 29 },\r\n    { id: 2, message: \"DA ja napisal govnokod!\", likesCount: 3000 },\r\n  ],\r\n  newPostText: \"my-text\",\r\n  profile: null,\r\n  status: \"\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      let newPost = {\r\n        id: 3,\r\n        message: action.newPostBody,\r\n        likesCount: 0,\r\n      };\r\n      let stateCopy = { ...state };\r\n      stateCopy.postsData = [...state.postsData];\r\n      stateCopy.postsData.push(newPost);\r\n      // stateCopy.newPostText = \"\";\r\n      return stateCopy;\r\n    }\r\n\r\n    case SET_STATUS: {\r\n      return {\r\n        ...state,\r\n        status: action.status,\r\n      };\r\n    }\r\n\r\n    case SET_USER_PROFILE: {\r\n      return { ...state, profile: action.profile };\r\n    }\r\n\r\n    case DELETE_POST: {\r\n      return {\r\n        ...state,\r\n        postsData: state.postsData.filter((p) => p.id != action.postId),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostBody) => ({\r\n  type: ADD_POST,\r\n  newPostBody,\r\n});\r\n\r\nexport const setUserProfile = (profile) => ({\r\n  type: SET_USER_PROFILE,\r\n  profile,\r\n});\r\n\r\nexport const setStatus = (status) => ({\r\n  type: SET_STATUS,\r\n  status,\r\n});\r\n\r\nexport const deletePost = (postId) => ({\r\n  type: DELETE_POST,\r\n  postId,\r\n});\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  let response = await usersAPI.getProfile(userId);\r\n  dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n  let response = await profileAPI.getStatus(userId);\r\n  dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n  let response = await profileAPI.updateStatus(status);\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setStatus(status));\r\n  }\r\n};\r\n\r\nexport default profileReducer;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n  });\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n  \r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","const SEND_MESSAGE = \"SEND-MESSAGE\";\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    { id: 1, name: \"Artur\" },\r\n    { id: 2, name: \"Edgar\" },\r\n    { id: 3, name: \"Vadim\" },\r\n  ],\r\n  messages: [\r\n    { id: 1, message: \"Hi\" },\r\n    { id: 2, message: \"How are you?\" },\r\n    { id: 3, message: \"Bye!11\" },\r\n  ],\r\n  newMessageText: \"\",\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE: {\r\n      let newMessage = action.newMessageBody;\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, { id: 4, message: newMessage }],\r\n        newMessageText: \"\",\r\n      };\r\n      // stateCopy.messages = [...state.messages];\r\n      // stateCopy.messages.push({ id: 4, message: newMessage });\r\n      // stateCopy.newMessageText = \"\";\r\n      // return stateCopy;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({\r\n  type: SEND_MESSAGE,\r\n  newMessageBody,\r\n});\r\n\r\nexport default dialogsReducer;\r\n"],"sourceRoot":""}